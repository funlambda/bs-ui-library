// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Result2$UiLibrary = require("./Result2.bs.js");

function initialize(init) {
  return Result2$UiLibrary.mk(/* record */[
              /* value */init,
              /* isHovered : false */0,
              /* isFocused : false */0
            ]);
}

function handle(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case 0 : 
          return Result2$UiLibrary.mk(/* record */[
                      /* value */state[/* value */0],
                      /* isHovered */state[/* isHovered */1],
                      /* isFocused : true */1
                    ]);
      case 1 : 
          return Result2$UiLibrary.mk(/* record */[
                      /* value */state[/* value */0],
                      /* isHovered */state[/* isHovered */1],
                      /* isFocused : false */0
                    ]);
      case 2 : 
          return Result2$UiLibrary.mk(/* record */[
                      /* value */state[/* value */0],
                      /* isHovered : true */1,
                      /* isFocused */state[/* isFocused */2]
                    ]);
      case 3 : 
          return Result2$UiLibrary.mk(/* record */[
                      /* value */state[/* value */0],
                      /* isHovered : false */0,
                      /* isFocused */state[/* isFocused */2]
                    ]);
      
    }
  } else {
    return Result2$UiLibrary.mk(/* record */[
                /* value */action[0],
                /* isHovered */state[/* isHovered */1],
                /* isFocused */state[/* isFocused */2]
              ]);
  }
}

function viewModel(state, dispatch) {
  return /* record */[
          /* value */state[/* value */0],
          /* isHovered */state[/* isHovered */1],
          /* isFocused */state[/* isFocused */2],
          /* onChange */(function (s) {
              return Curry._1(dispatch, /* Change */[s]);
            }),
          /* onFocus */(function () {
              return Curry._1(dispatch, /* Focus */0);
            }),
          /* onBlur */(function () {
              return Curry._1(dispatch, /* Blur */1);
            }),
          /* onMouseEnter */(function () {
              return Curry._1(dispatch, /* MouseEnter */2);
            }),
          /* onMouseLeave */(function () {
              return Curry._1(dispatch, /* MouseLeave */3);
            })
        ];
}

function getValue(state) {
  return state[/* value */0];
}

var block = /* record */[
  /* initialize */initialize,
  /* handle */handle,
  /* viewModel */viewModel,
  /* getValue */getValue
];

exports.block = block;
/* No side effect */
